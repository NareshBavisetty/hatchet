// Copyright 2022-present Kuei-chun Chen. All rights reserved.

package hatchet

import (
	"encoding/base64"
	"flag"
	"fmt"
	"log"
	"net"
	"net/http"

	_ "github.com/mattn/go-sqlite3"
	"github.com/simagix/gox"
)

const (
	CHEN_ICO     = `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`
	HATCHET_PNG  = `iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/NlyAAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAPKADAAQAAAABAAAAPAAAAACL3+lcAAAGeklEQVRoBe1aCUhcVxQd13Hf1zpxFzVqXOLWuqAxSrQGBY1a1IK1cYEYkBJjBcVaJbYoQUMV1xZBbFNTmjQRbAihxUpLJaCioIa20Bh1QCdxHbf5Pa/EYTZHx4wzf+A/eMz3/bfcc+99d/uyWExjOMBwgOEAwwGGAwwHGA4wHDgdDmidzrbK2/UCWkJCguvu7u4LIyOjic3NTW5tba1AeSfQZCeKorSA9aqDgwPX3d2dsrW1FRgaGt4DefY0IVF5ZDx9+lQ3JiamBmBfa2trU9hZtPfgb0vlnabmnaCuRufPn2+2tLRc19LSEgUq+vwFyDRXM6lvf3xOTs47gYGBX5uYmGzKAUtB6vs2NjYfczgcQ0VP1VZ0wWnOn5qauj47O5u5vr5uiDt86FEwXtoAq29vb6+w0aUV4MnJyd+2trY2DkX65gUsNgvW+gNI2gFDCoM+an+VvIcaX8BBk+h76KL3Veazjo4OBSk/a25u/vDu3bsKq7ZKQB12SGVl5UVY5L8hMeJfZQKUNU4seEhIyFpGRkZWWVkZ+7D9aTXe0dFhAz/7SFdXd1sWqKPGiHEzMzPjJicnVzU1NdkQ/y0PoK68l6p4NzQ0VL68vByzv7+vf5LziHFbXV21nZiYaFhYWOC8fPnyFsZevLHyJ9ny9NbcuHEj1c7OTqYqW1hYUImJiWuwxAJ5LgrUCa8Auddwa39dRIMv15NFudqsdEFBge3g4OAnKysrTgKBQEwNYYxY2dnZPxOGeHp6PoG678oiXnIMWsJaWlpyg9tyxjWRqb1qAQyVMwdhnejv7u3tiUkCEmXFx8f3BQUFfQQJ/wrC6xFHr8BASeKT+beTk9OPYNJjWG6+zAnqGPT39y81NjbmSaoqJLMbERFxq7S0VBgr83g8i/Dw8O8hZQJAqL6Sz8Rie3l5/Yv1XngnpjHqwPj/mZCsQUVFxTWoLI8QKEo0wFKOjo6fW1lZmUkSeOnSpThTU9MlSQaJrsf7RaSRmVeuXKGPT87NzY2EFBYhLTGwIJZKT0//o7e39yyYIqW7yJ44AQEBk1i3LwpS5JkELAnoJ7L0WKf8Bs4HmZub/w4pEQMkBtjFxeVJamqqFzIlKbCEEsIEHx+fz2CFV0XXEsZh7BeMnUWXuRbjqm/19fVpcBPP2Wy2mIT09PRIePgQqaAzqJJ774qLi29CE15hHkVU+8yZM1RsbOyDyMhI16PW4r1qGpFMV1dXXnR09BLAiklVX1+funz58srAwMD7yJKOVMW0tLQUMIeL/gogh0pKSjKg6hY4Qy6jVIMUp4AQvdbW1uuwmjwCjgwddAIeBmamra0tGe7jSLCEaISNLuXl5YUtLS3vjY+PG5Mx2jSANWlsbLwNQ7MuaaBIBJWUlPRndXV1IMDqqJpomdHI2xDR399vCWvcMjIykjk/P29Iop+DhjCShXv3GBnOtZ2dnedZWVmaW32EVHX9/Pyc4XZ+gnHZlvSZsMRUYWHhN1BzDm3u3YEkFP3t6ekxBZg7CAv/AVAxS4y9qNDQ0G24nC+7u7utFN2bVvMhKTasZQ5i3YcGBgZ8SalijEII2dfQ0JAAi2pAK+IVIYaoL0orgb6+vu2Q6rpkmEiAe3h4UHFxcbcRQVkosjfd5mohYjLJy8urDQ4O5pHAAQQKOwEOl8OHxH+oqam5ev/+fVO6ATg2PTA27HPnznEQ4N+Ga5EqkgPsnre39xaCjK/gY62PvbGKJx7LLaEMYzYzM1MEF1PI5XK98Cv0nwDKglR3INWR/Pz8ewg0+pHHvlYxDuUcR9zH8PCwHaqK7bivG5JBBMAKkGzzUVHpAFg75Zyqxl1GR0edUGb51s3NbYvUi0CKaN+Gz52tq6urQMSk2e6G8BhBhH5UVNSniI6kvuBBsluY0h4WFuaOX/qkZYTwkzTcWTbKKoWQ6gLWixXHUZnYR4nmO7ynrWFSGDNi3FhXV9cFSTWGZEml/xkylvixsTGx4pvCh9BlAbHIcC8PAFbqSwCS7s2UlJTEoqIijQUrdf8WFxc98XUuEAIQy1OJ+0GBrc/a2nq8s7PzWHViughRlA4pwNPT0zMA3Q9fS8opwoYMaA39EZ/PFxsXTtDwBzaM0x0E/gv4R5I19A1kPDNVVVX+8M1STNIkrIdFWtuIl2/CD7fhy4AlwFuhCLc4Nzc3i8RAc5N2TZIMQyvDAYYDDAcYDjAcYDjAcEDjOPAfT2O3sqjcZZcAAAAASUVORK5CYII=`
	SQLITE3_FILE = "./data/hatchet.db"
)

func Run(fullVersion string) {
	dbfile := flag.String("dbfile", SQLITE3_FILE, "database file name")
	inMem := flag.Bool("in-memory", false, "use in-memory mode")
	legacy := flag.Bool("legacy", false, "view logs in legacy format")
	port := flag.Int("port", 3721, "web server port number")
	ver := flag.Bool("version", false, "print version number")
	verbose := flag.Bool("verbose", false, "turn on verbose")
	web := flag.Bool("web", false, "starts a web server")
	flag.Parse()
	flagset := make(map[string]bool)
	flag.Visit(func(f *flag.Flag) { flagset[f.Name] = true })

	if *ver {
		fmt.Println(fullVersion)
		return
	}

	if *inMem {
		if *dbfile != SQLITE3_FILE {
			log.Fatalln("cannot use -dbfile and -in-memory together")
		} else if len(flag.Args()) == 0 {
			log.Fatalln("cannot use -in-memory without a log file")
		}
		log.Println("in-memory mode is enabled, no data will be persisted")
		*dbfile = "file::memory:?cache=shared"
		*web = true
	}

	logv2 := Logv2{version: fullVersion, dbfile: *dbfile, verbose: *verbose, legacy: *legacy}
	instance = &logv2
	for _, filename := range flag.Args() {
		err := logv2.Analyze(filename)
		if err != nil {
			log.Fatal(err)
		}
	}
	if *legacy || !*web {
		if len(flag.Args()) == 0 {
			flag.PrintDefaults()
		}
		return
	}

	http.HandleFunc("/", gox.Cors(handler))
	http.HandleFunc("/favicon.ico", gox.Cors(faviconHandler))
	http.HandleFunc("/api/hatchet/v1.0/hatchets/", gox.Cors(apiHandler))
	http.HandleFunc("/hatchets/", gox.Cors(htmlHandler))
	addr := fmt.Sprintf(":%d", *port)
	if listener, err := net.Listen("tcp", addr); err != nil {
		log.Fatal(err)
	} else {
		listener.Close()
		if !*inMem {
			log.Println("using data file", *dbfile)
		}
		log.Println("starting web server at", addr)
		log.Fatal(http.ListenAndServe(addr, nil))
	}
}

func faviconHandler(w http.ResponseWriter, r *http.Request) {
	r.Close = true
	r.Header.Set("Connection", "close")
	w.Header().Set("Content-Type", "image/x-icon")
	ico, _ := base64.StdEncoding.DecodeString(CHEN_ICO)
	w.Write(ico)
}
